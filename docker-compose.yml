version: '3.8'

services:
  vllm-openai:
    image: docker.io/vllm/vllm-openai:latest
    container_name: vllm-service
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities:
                - gpu
    volumes:
        - "./models:/models"
    env_file:
      - .env
    environment:
        HUGGING_FACE_HUB_TOKEN: ${HF_TOKEN}
    ports:
        - 8000:8000
    command: >
      --model ${MODEL_PATH}
      --max-num-seqs 4
      --max-model-len 2048
      --gpu-memory-utilization 0.8
      --port ${VLLM_MAIN_PORT}
      --tool-call-parser hermes
      --enable-auto-tool-choice
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: tfg-backend
    env_file:
      - .env
    environment:
      VLLM_HOST: vllm-openai
    ports:
      - "8080:8080"
    depends_on:
      - vllm-openai
      - rag-service
    restart: unless-stopped

  # Qdrant Vector Database
  qdrant:
    image: docker.io/qdrant/qdrant:latest
    container_name: qdrant-service
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped

  # Ollama for Embeddings
  ollama:
    image: docker.io/ollama/ollama:latest
    container_name: ollama-service
    ports:
      - "11435:11434"
    volumes:
      - ollama_models:/root/.ollama
    restart: unless-stopped

  # RAG Service
  rag-service:
    build:
      context: ./rag-service
      dockerfile: Dockerfile
    container_name: rag-service
    env_file:
      - .env
    environment:
      QDRANT_HOST: qdrant
      OLLAMA_HOST: ollama
    ports:
      - "8081:8081"
    depends_on:
      - qdrant
      - ollama
    restart: unless-stopped
      

volumes:
  mongodb_data:
  qdrant_storage:
  ollama_models: